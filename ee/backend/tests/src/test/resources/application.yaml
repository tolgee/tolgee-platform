spring:
  autoconfigure:
    exclude:
      - org.redisson.spring.starter.RedissonAutoConfigurationV2
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
  jpa:
    properties:
      hibernate:
        order_by:
          default_null_ordering: first
        jdbc:
          batch_size: 1000
        order_inserts: true
        order_updates: true
        dialect: io.tolgee.dialects.postgres.CustomPostgreSQLDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  data:
    redis:
      repositories:
        enabled: false
  main:
    allow-bean-definition-overriding: true
    lazy-initialization: true
  liquibase:
    change-log: classpath:db/changelog/schema.xml
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always
  jmx:
    enabled: false
tolgee:
  postgres-autostart:
    enabled: true
    container-name: tolgee_backend_tests_postgres_main
    port: 55433
    stop: false
  data-path: ./build/test_data
  authentication:
    native-enabled: true
    registrationsAllowed: true
    create-initial-user: false
    google:
      client-id: fake_id
      client-secret: fake_secret
    github:
      client-id: fake_id
      client-secret: fake_secret
    oauth2:
      client-id: fake_client_id
      client-secret: fake_client_secret
      scopes:
        - openid
        - email
        - profile
      authorization-url: "https://example.com/authorize"
      token-url: "https://example.com/oauth/token"
      user-url: "https://example.com/userinfo"
    sso-organizations:
      enabled: false
    sso-global:
      enabled: false
      authorization-uri: "https://dummy-url.com"
      client-id: "dummy_client_id"
      client-secret: "clientSecret"
      domain: "domain.com"
      token-uri: "http://tokenUri"
  internal:
    fake-mt-providers: true
    mock-free-plan: true
    disable-initial-user-creation: true
    use-in-memory-file-storage: true
  cache:
    caffeine-max-size: 1000
  machine-translation:
    free-credits-amount: -1
    google:
      api-key: aaa
    aws:
      accessKey: aaa
      secretKey: aaa
  billing:
    enabled: false
  telemetry:
    enabled: false
    server: http://localhost:8080

management:
  endpoint:
    metrics:
      enabled: false

springdoc:
  api-docs:
    enabled: false

logging:
  level:
    "io.tolgee.ExceptionHandlers": DEBUG
