apply from: './gradle/utils.gradle'

def webappPath = "${project.projectDir}/webapp"

task copyDist(type: Copy) {
    def fromDir = "${webappPath}/dist"
    def toDir = "${project.projectDir}/build/dependency/BOOT-INF/classes/static/."
    from fromDir
    into toDir
    mustRunAfter unpack
    dependsOn "buildWebapp"
}

task installWebappDeps(type: Exec) {
    onlyIf { System.getenv("SKIP_WEBAPP_BUILD") != "true" }
    commandLine npmCommandName, "ci"
    workingDir = webappPath
    inputs.file("${project.projectDir}/webapp/package.json")
    inputs.file("${project.projectDir}/webapp/package-lock.json")
    outputs.dir("${project.projectDir}/webapp/node_modules")
}

task buildWebapp(type: Exec) {
    onlyIf { System.getenv("SKIP_WEBAPP_BUILD") != "true" }
    commandLine npmCommandName, "run", "build"
    workingDir = webappPath
    inputs.dir("${project.projectDir}/webapp/")
    outputs.dir("${project.projectDir}/webapp/dist/")
    dependsOn "installWebappDeps", "updateStaticTranslations"
}

task createBuildDir() {
    File directory = new File(buildDir as String)
    if (!directory.exists()) {
        directory.mkdir()
    }
}

task updateStaticTranslations(type: Exec) {
    onlyIf { System.getenv("SKIP_WEBAPP_BUILD") != "true" }
    def tolgeeApiUrl = System.env.TOLGEE_API_URL
    onlyIf { tolgeeApiUrl != null && tolgeeApiUrl != "" }
    workingDir = webappPath
    commandLine npmCommandName, "run", "load-translations"
    dependsOn(createBuildDir)
}
