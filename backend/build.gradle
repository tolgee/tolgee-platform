buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.9.22"
        classpath "org.jetbrains.kotlin:kotlin-noarg:1.9.22"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:3.2.3"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.4"
    }
}

plugins {
    id 'org.springframework.boot' version '3.2.3' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.9.22' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.22' apply false
    id 'org.jetbrains.kotlin.kapt' version '1.9.22' apply false
}

allprojects {
    repositories {
        mavenCentral()
    }
    
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '17'
        }
    }
    
    tasks.withType(Test) {
        useJUnitPlatform()
        maxParallelForks = (Runtime.runtime.availableProcessors() / 2).coerceAtLeast(1)
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
    
    if (plugins.hasPlugin('java')) {
        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(17)
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
} 