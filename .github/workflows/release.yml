name: Release

on:
  workflow_run:
    workflows: ["Test"]
    branches: ["main", "next"]
    types:
      - completed

jobs:
  main:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-env
        with:
          docker: true
          docker-hub: true
          docker-hub-username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker-hub-password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install node modules
        run: npm ci

      - name: Run get new version
        run: npm run release-dry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: Tolgee Machine
          GIT_COMMITTER_NAME: Tolgee Machine
          GIT_AUTHOR_EMAIL: machine@tolgee.io
          GIT_COMMITTER_EMAIL: machine@tolgee.io

      - name: Set version property
        id: version
        run: echo "VERSION=$(test -e .VERSION && echo v$(cat .VERSION))" >> $GITHUB_OUTPUT

      - name: BootJar with version
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew bootJar
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{ secrets.TOLGEE_API_KEY }}
          TOLGEE_API_URL: ${{ secrets.TOLGEE_API_URL }}

      - name: Prepare for docker build
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew dockerPrepare
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{secrets.TOLGEE_API_KEY}}
          TOLGEE_API_URL: ${{secrets.TOLGEE_API_URL}}

      - name: Prepare Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: tolgee/tolgee
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: docker-push
        with:
          context: build/docker
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=tolgee/tolgee:buildcache
          cache-to: type=registry,ref=tolgee/tolgee:buildcache,mode=max
          push: true
          sbom: true
          provenance: mode=max

      - name: Publish attestation to GitHub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: docker.io/tolgee/tolgee
          subject-digest: ${{ steps.docker-push.outputs.digest }}
          push-to-registry: true

      - name: Pack with webapp
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: ./gradlew packResources
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          TOLGEE_API_KEY: ${{ secrets.TOLGEE_API_KEY }}
          TOLGEE_API_URL: ${{ secrets.TOLGEE_API_URL }}

      - name: Run npm release
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.TOLGEE_MACHINE_PAT }}
          VERSION: ${{ steps.version.outputs.VERSION }}
          GIT_AUTHOR_NAME: Tolgee Machine
          GIT_COMMITTER_NAME: Tolgee Machine
          GIT_AUTHOR_EMAIL: machine@tolgee.io
          GIT_COMMITTER_EMAIL: machine@tolgee.io

      - name: Tag production and deprecated keys in platform
        if: ${{ steps.version.outputs.VERSION != '' }}
        run: "npm run tag-keys"
        env:
          TOLGEE_API_KEY: ${{ secrets.TOLGEE_API_KEY }}
        working-directory: ./webapp

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test
          path: |
            ./e2e/cypress/videos/**/*
            ./e2e/cypress/screenshots/**/*
            ./build/reports/**/*

      - name: Trigger Billing repo tests & testing deploy
        if: ${{ steps.version.outputs.VERSION != '' }}
        env:
          TOKEN: ${{ secrets.TOLGEE_MACHINE_PAT }}
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token $TOKEN" \
            https://api.github.com/repos/tolgee/billing/actions/workflows/test.yml/dispatches \
            -d '{"ref":"main","inputs":{"release-version":"$VERSION"}}'
